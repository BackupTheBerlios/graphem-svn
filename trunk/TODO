0.2:
add touchpad mode option
display number of strokes
adding new patterns should work like this:
	click New Pattern, dialog appears
	enter your pattern, delete strokes if you want
	clicking Save does what? overwriting old pattern without testing doesn't seem wise.

remove command line arguments:
		--touchpad (stored along with pattern)
logo

0.3:
l10n
can i optimize the tryPattern() algorithm so patterns are tried in order of likelihood?
make preprocess() suck less, use velocity to determiny averaging
create documentation
generate random pattern
estimate entropy of input

?:
test wether manual inlining makes sense
test if hash comparison can be optimized (QByteArray vs. QString vs ?)
make Auth a base class
support real handwriting
	try different algorithms for Auth module:
	fcc-codes (current implementation):
		doesn't seem to be very reliable (why?)
		- useless for handwriting, kanji
		+ simple geometric patterns work
	maybe something else:
		element: cusp, straight line, loop; also store direction
		still missing velocity, probably helpful
use pattern to access encryption key, should be possible with QCA
don't show mouse cursor, maybe only record relative movements (except for tablets)?

does hashing really make sense? Find out just what part of the total keyspace we have to try on average...
if a pattern is supposed to be secure, we can only try a number of keys which is many orders of magnitude less

